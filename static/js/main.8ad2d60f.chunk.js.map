{"version":3,"sources":["routes/About.js","components/Movie.js","components/Home.js","containers/HomeContainers.js","actions/index.js","actions/ActionTypes.js","components/Detail.js","containers/DetailContainers.js","components/Navigation.js","routes/NotFound.js","containers/App.js","reducers/getMovies.js","reducers/setMovie.js","reducers/index.js","index.js"],"names":["About","className","Movie","id","year","title","summary","poster","genres","to","pathname","state","src","alt","map","genre","index","key","slice","Home","handleChange","e","console","log","target","value","props","onSendValue","onGetMovies","this","isLoading","movies","name","onChange","movie","medium_cover_image","Component","defaultProps","onSetMovies","warn","withRouter","HomeContainer","connect","moviesData","dispatch","axios","get","then","response","data","type","catch","error","actions","Detail","getDetails","a","onSetMovie","history","match","undefined","params","push","length","style","backgroundImage","large_cover_image","float","color","fontFamily","rating","language","runtime","fontWeight","description_full","DetailContainer","movieData","Navigation","NotFound","App","path","exact","component","HomeContainers","DetailContainers","initialState","home","action","filter","n","indexOf","detail","reducers","combineReducers","getMovies","setMovie","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ad2d60f.chunk.js","sourcesContent":["import React from 'react';\nimport './About.css';\n\nconst About = () => {\n  return (\n    <div className=\"about__container\">\n      <span>\n        \"Freedom is the freedom to say that two plus two make four. If that is\n        granted, all else follow.\"\n      </span>\n      <span>- George Orwell, 1984</span>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Movie.css';\nimport { Link } from 'react-router-dom';\nimport { property } from 'css-tree';\n\n//Function Component: it doesn't need state\nconst Movie = ({ id, year, title, summary, poster, genres }) => {\n  return (\n    <div className=\"movie\">\n      <Link\n        to={{\n          pathname: `/movie_detail/${id}`,\n          state: {\n            id,\n            year,\n            title,\n            summary,\n            poster,\n            genres,\n          },\n        }}\n      >\n        <img src={poster} alt={title} title={title} />\n        <div className=\"movie__data\">\n          <h3 className=\"movie__title\">{title}</h3>\n          <h5 className=\"movie__year\">{year}</h5>\n          <ul className=\"movie__genres\">\n            {genres.map((genre, index) => (\n              <li key={index} className=\"genres__genre\">\n                {genre}\n              </li>\n            ))}\n          </ul>\n          <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  year: PropTypes.number.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;\n","import React, { Component } from 'react';\nimport Movie from './Movie';\nimport { withRouter } from 'react-router-dom';\nimport './Home.css';\nimport PropTypes from 'prop-types';\n\nclass Home extends Component {\n  componentDidMount() {\n    const { onGetMovies } = this.props;\n    onGetMovies('All');\n  }\n\n  handleChange = e => {\n    console.log(e.target.value);\n    this.props.onSendValue(e.target.value);\n    this.props.onGetMovies(e.target.value);\n  };\n  render() {\n    const { isLoading, movies } = this.props;\n    console.log(this.props);\n    return (\n      <div className=\"container\">\n        <form className=\"movie__sort\">\n          <select\n            id=\"genres\"\n            name=\"genres\"\n            // value={this.props}\n            onChange={e => {\n              this.handleChange(e);\n            }}\n          >\n            <option value=\"All\">All</option>\n            <option value=\"Drama\">Drama</option>\n            <option value=\"Comedy\">Comedy</option>\n            <option value=\"Animation\">Animation</option>\n            <option value=\"Horror\">Horror</option>\n            <option value=\"Thriller\">Thriller</option>\n            <option value=\"Action\">Action</option>\n            <option value=\"War\">War</option>\n            <option value=\"Romance\">Romance</option>\n            <option value=\"Sci-Fi\">Sci-Fi</option>\n            <option value=\"Fantasy\">Fantasy</option>\n            <option value=\"Biography\">Biography</option>\n            <option value=\"History\">History</option>\n            <option value=\"Adventure\">Adventure</option>\n            <option value=\"Mystery\">Mystery</option>\n            <option value=\"Sport\">Sport</option>\n            <option value=\"Musical\">Musical</option>\n            <option value=\"Crime\">Crime</option>\n          </select>\n        </form>\n        <section>\n          {isLoading ? (\n            <div className=\"loader\">\n              <span className=\"loader__text\">Loading...</span>\n            </div>\n          ) : (\n            <div className=\"sort__content\">\n              {movies[0] ? (\n                <div className=\"movies\">\n                  {movies.map(movie => (\n                    <Movie\n                      key={movie.id}\n                      id={movie.id}\n                      year={movie.year}\n                      title={movie.title}\n                      summary={movie.summary}\n                      poster={movie.medium_cover_image}\n                      genres={movie.genres}\n                    />\n                  ))}\n                </div>\n              ) : (\n                <div className=\"loader\">\n                  <div className=\"no__movies\">\n                    <span>\n                      Currently, there's no {this.props.value} movies in the\n                      chart.\n                    </span>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </section>\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  isLoading: PropTypes.bool,\n  movies: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.string,\n  onSetMovies: PropTypes.func,\n  onGetMovies: PropTypes.func,\n  onSendValue: PropTypes.func,\n};\n\nHome.defaultProps = {\n  isLoading: true,\n  movies: [],\n  value: 'All',\n  onSetMovies: () => console.warn('setMovies is not defined'),\n  onGetMovies: () => console.warn('getMovies is not defined'),\n  onSendValue: () => console.warn('sendValue is not defined'),\n};\nexport default withRouter(Home);\n","import Home from '../components/Home';\nimport { withRouter } from 'react-router-dom';\nimport * as actions from '../actions';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => ({\n  movies: state.moviesData.movies,\n  isLoading: state.moviesData.isLoading,\n  value: state.moviesData.value,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  // onSetMovies: movies => dispatch(actions.set_movies(movies)),\n  onGetMovies: value => {\n    dispatch(actions.get_movies(value));\n    // console.log(this.state.isLoading);\n  },\n  onSendValue: value => {\n    dispatch(actions.sendValue(value));\n  },\n});\n\nconst HomeContainer = connect(mapStateToProps, mapDispatchToProps)(Home);\n\nexport default withRouter(HomeContainer);\n","import * as types from './ActionTypes';\nimport axios from 'axios';\n\nexport const set_movie = movie => ({\n  type: types.SET_MOVIE,\n  movie,\n});\n\nexport const set_movies = ({ movies, value }) => ({\n  type: types.GET_MOVIES,\n  movies,\n  value,\n});\n\nexport const get_movies = value => {\n  return dispatch => {\n    return axios\n      .get('https://yts.mx/api/v2/list_movies.json?sort_by=rathing')\n      .then(response => {\n        const {\n          data: {\n            data: { movies },\n          },\n        } = response;\n        console.log(movies);\n        dispatch(set_movies({ movies, value }));\n      })\n      .catch(error => {\n        throw error;\n      });\n  };\n};\n\nexport const sendValue = value => ({\n  type: types.SEND_VALUE,\n  value,\n});\n","export const SET_MOVIE = 'SET_MOVIE';\nexport const SET_MOVIES = 'SET_MOVIES';\nexport const GET_MOVIES = 'GET_MOVIES';\nexport const SEND_VALUE = 'SEND_VALUE';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport './Detail.css';\nimport axios from 'axios';\n\nclass Detail extends Component {\n  // state = {\n  //   movie: [],\n  // };\n\n  getDetails = async id => {\n    console.log(id);\n    if (id) {\n      const {\n        data: {\n          data: { movie },\n        },\n      } = await axios.get(\n        `https://yts.mx/api/v2/movie_details.json?movie_id=${id}`,\n      );\n      console.log(this.props);\n      // this.setState({ movie });\n      this.props.onSetMovie(movie);\n    }\n  };\n\n  componentDidMount() {\n    console.log(this.props);\n    const { history, match } = this.props;\n    if (match.params === undefined) {\n      history.push('/');\n    }\n    this.getDetails(match.params.id);\n  }\n\n  ///axios 분리하기\n\n  render() {\n    const { movie } = this.props;\n    // this.getDetails(match.params.id);\n    // const { movie } = this.state;\n    console.log({ movie });\n    if (movie.length !== 0) {\n      return (\n        <div className=\"movie__detail\">\n          <div className=\"center\">\n            <div\n              className=\"img\"\n              style={{ backgroundImage: `url(${movie.large_cover_image})` }}\n            />\n          </div>\n\n          <div className=\"movie__descriptions\">\n            <p className=\"movie__title\">{movie.title}</p>\n            <div className=\"movie__sub\">\n              <p style={{ float: 'left' }} className=\"movie__year\">\n                {movie.year}\n              </p>\n              <ul className=\"movie__genres\">\n                {movie.genres.map((genre, index) => (\n                  <li key={index} className=\"genres__genre\">\n                    {genre}\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <div className=\"info\">\n              <div\n                style={{ color: 'grey', fontFamily: 'sans-serif' }}\n                className=\"info__title\"\n              >\n                <p>Rating</p>\n                <p>Language</p>\n                <p>Length</p>\n              </div>\n              <div className=\"info__content\">\n                <p>{movie.rating}</p>\n                <p>{movie.language}</p>\n                <p>{movie.runtime}min</p>\n              </div>\n            </div>\n            <div className=\"synopsis\">\n              <p style={{ fontWeight: 800 }}>Synopsis</p>\n              <p className=\"movie__summary\">{movie.description_full}</p>\n            </div>\n          </div>\n        </div>\n      );\n    } else return null;\n  }\n}\n\nDetail.propTypes = {\n  movie: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onSetMovie: PropTypes.func,\n};\n\nDetail.defaultProps = {\n  movie: [],\n  onSetMovie: () => console.warn('setMovie is not defined'),\n};\n\nexport default withRouter(Detail);\n","import Detail from '../components/Detail';\nimport * as actions from '../actions';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => ({\n  movie: state.movieData.movie,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSetMovie: movie => dispatch(actions.set_movie(movie)),\n});\n\nconst DetailContainer = connect(mapStateToProps, mapDispatchToProps)(Detail);\n\nexport default DetailContainer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navigation.css';\n\nconst Navigation = () => {\n  return (\n    <div className=\"nav\">\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/about\">About</Link>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport './About.css';\nimport { Link } from 'react-router-dom';\n\nclass NotFound extends Component {\n  state = {\n    error: \"Can't find this page.\",\n  };\n  render() {\n    const { error } = this.state;\n    return (\n      <div className=\"about__container\">\n        <span>\n          <h3>{error}</h3>\n        </span>\n        <Link to=\"/\">Go Back to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport About from '../routes/About';\nimport HomeContainers from './HomeContainers';\nimport DetailContainers from './DetailContainers';\nimport Navigation from '../components/Navigation';\nimport NotFound from '../routes/NotFound';\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <Navigation />\n        <Switch>\n          <Route path=\"/\" exact={true} component={HomeContainers} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/movie_detail/:id\" component={DetailContainers} />\n          <Route component={NotFound} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","import * as types from '../actions/ActionTypes';\n\nconst initialState = {\n  movies: [],\n  isLoading: true,\n  value: 'All',\n};\n\nfunction home(state = initialState, action) {\n  switch (action.type) {\n    case types.GET_MOVIES:\n      console.log(action.value);\n      if (action.value === 'All') {\n        console.log('action. Alllll');\n        return {\n          isLoading: false,\n          movies: action.movies,\n          value: action.value,\n        };\n      } else {\n        action.movies = action.movies.filter(\n          n => n.genres.indexOf(action.value) > -1,\n        );\n        // if (action.movies.length === 0) {\n        //   return {\n        //     isLoading: false,\n        //     movies:action.movies\n        //   };\n        // }\n        return {\n          isLoading: false,\n          movies: action.movies,\n          value: action.value,\n        };\n      }\n\n    case types.SEND_VALUE:\n      return {\n        isLoading: true,\n        value: action.value,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default home;\n","import * as types from '../actions/ActionTypes';\n\nconst initialState = {\n  movie: [],\n};\n\nfunction detail(state = initialState, action) {\n  switch (action.type) {\n    case types.SET_MOVIE:\n      return {\n        movie: action.movie,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default detail;\n","import { combineReducers } from 'redux';\nimport getMovies from './getMovies';\nimport setMovie from './setMovie';\n\nconst reducers = combineReducers({\n  moviesData: getMovies,\n  movieData: setMovie,\n});\n\nexport default reducers;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from './reducers/index';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(\n  reducers,\n  applyMiddleware(thunk),\n  // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}